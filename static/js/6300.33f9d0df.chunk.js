"use strict";(self.webpackChunksc_trees=self.webpackChunksc_trees||[]).push([[6300],{37888:(e,t,r)=>{r.d(t,{v:()=>n});var a=r(24387);function n(e){e?.writtenProperties&&e.writtenProperties.forEach(e=>{let{target:t,propName:r,newOrigin:n}=e;(0,a.H)(t)&&n&&t.originOf(r)!==n&&t.updateOrigin(r,n)})}},56300:(e,t,r)=>{r.d(t,{save:()=>y,saveAs:()=>f});var a=r(97924),n=r(72945);const i="Map Service",o="map-image-layer-save",s="map-image-layer-save-as";function l(e){return{isValid:"map-image"===e.type&&!e.sourceJSON?.tileInfo,errorMessage:"Layer.type should be 'map-image' and reference a dynamic (non-cached) map service"}}function c(e){const t=e.layerJSON;return Promise.resolve(t&&Object.keys(t).length?t:null)}function m(e,t){return u(e,t),Promise.resolve()}async function p(e,t){const{parsedUrl:r,title:a,fullExtent:i}=e;t.url=r.path,t.title||=a,t.extent=i?await(0,n.sQ)(i):null,(0,n.OM)(t,n.mm.METADATA),u(e,t)}function u(e,t){(0,n.LG)(t,n.mm.DYNAMIC);const r=e.sublayers?.length??0;(0,n.Sm)(t,n.mm.MULTI_LAYER,r>1),(0,n.Sm)(t,n.mm.SINGLE_LAYER,1===r)}async function y(e,t){return(0,a.UN)({layer:e,itemType:i,validateLayer:l,createItemData:c,errorNamePrefix:o,setItemProperties:m},t)}async function f(e,t,r){return(0,a.Uh)({layer:e,itemType:i,validateLayer:l,createItemData:c,errorNamePrefix:s,newItem:t,setItemProperties:p},r)}},97924:(e,t,r)=>{r.d(t,{UN:()=>I,Uh:()=>h});var a=r(50076),n=r(37888),i=r(65308),o=r(70652),s=r(79942),l=r(72945),c=r(24907);async function m(e){const{layer:t,errorNamePrefix:r,validateLayer:n}=e;await t.load(),function(e,t,r){const n=r(e);if(!n.isValid)throw new a.A(`${t}:invalid-parameters`,n.errorMessage,{layer:e})}(t,r,n)}function p(e,t){return`Layer (title: ${e.title}, id: ${e.id}) of type '${e.declaredClass}' ${t}`}function u(e){const{item:t,errorNamePrefix:r,layer:n,validateItem:i}=e;if(function(e){const{item:t,itemType:r,additionalItemType:n,errorNamePrefix:i,layer:o}=e,s=[r];if(n&&s.push(n),!s.includes(t.type)){const e=s.map(e=>`'${e}'`).join(", ");throw new a.A(`${i}:portal-item-wrong-type`,`Portal item type should be one of: "${e}"`,{item:t,layer:o})}}(e),i){const e=i(t);if(!e.isValid)throw new a.A(`${r}:invalid-parameters`,e.errorMessage,{layer:n})}}function y(e){const{layer:t,errorNamePrefix:r}=e,{portalItem:n}=t;if(!n)throw new a.A(`${r}:portal-item-not-set`,p(t,"requires the portalItem property to be set"));if(!n.loaded)throw new a.A(`${r}:portal-item-not-loaded`,p(t,"cannot be saved to a portal item that does not exist or is inaccessible"));u({...e,item:n})}function f(e){const{newItem:t,itemType:r}=e;let a=o.default.from(t);return a.id&&(a=a.clone(),a.id=null),a.type??=r,a.portal??=i.A.getDefault(),u({...e,item:a}),a}function d(e){return(0,s.m)(e,"portal-item")}async function w(e,t,r){"beforeSave"in e&&"function"==typeof e.beforeSave&&await e.beforeSave();const a=e.write({},t);return await Promise.all(t.resources?.pendingOperations??[]),(0,c.ci)(t,{errorName:"layer-write:unsupported"},r),a}function v(e){(0,l.LG)(e,l.mm.JSAPI),e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter((e,t,r)=>r.indexOf(e)===t))}async function I(e,t){const{layer:r,createItemData:a,createJSONContext:i,setItemProperties:o,saveResources:s,supplementalUnsupportedErrors:l}=e;await m(e),y(e);const c=r.portalItem,p=i?i(c):d(c),u=await w(r,p,{...t,supplementalUnsupportedErrors:l}),f=await a({layer:r,layerJSON:u},c);return await(o?.(r,c,f)),v(c),await c.update({data:f}),(0,n.v)(p),await(s?.(c,p)),c}async function h(e,t){const{layer:r,createItemData:a,createJSONContext:i,setItemProperties:o,saveResources:s,supplementalUnsupportedErrors:l}=e;await m(e);const c=f(e),p=i?i(c):d(c),u=await w(r,p,{...t,supplementalUnsupportedErrors:l}),y=await a({layer:r,layerJSON:u},c);return await o(r,c,y),v(c),await async function(e,t,r){const a=e.portal;await a.signIn(),await a.user.addItem({item:e,data:t,folder:r?.folder})}(c,y,t),r.portalItem=c,(0,n.v)(p),await(s?.(c,p)),c}}}]);
//# sourceMappingURL=6300.33f9d0df.chunk.js.map